//==================================================================================
//    FireFly - Reconstructing rational functions and polynomial over finite fields.
//    Copyright (C) 2020  Jonas Klappert and Fabian Lange
//
//    This program is free software: you can redistribute it and/or modify
//    it under the terms of the GNU General Public License as published by
//    the Free Software Foundation, either version 3 of the License, or
//    (at your option) any later version.
//
//    This program is distributed in the hope that it will be useful,
//    but WITHOUT ANY WARRANTY; without even the implied warranty of
//    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
//    GNU General Public License for more details.
//
//    You should have received a copy of the GNU General Public License
//    along with this program.  If not, see <https://www.gnu.org/licenses/>.
//===================================================================================

#include "ReconstHelper.hpp"

namespace firefly {

  // the 300 largest 63-bit primes
  const std::vector<uint64_t>& primes() {
    const static std::vector<uint64_t> primevec = {
      9223372036854775783uLL, 9223372036854775643uLL, 9223372036854775549uLL,
      9223372036854775507uLL, 9223372036854775433uLL, 9223372036854775421uLL,
      9223372036854775417uLL, 9223372036854775399uLL, 9223372036854775351uLL,
      9223372036854775337uLL, 9223372036854775291uLL, 9223372036854775279uLL,
      9223372036854775259uLL, 9223372036854775181uLL, 9223372036854775159uLL,
      9223372036854775139uLL, 9223372036854775097uLL, 9223372036854775073uLL,
      9223372036854775057uLL, 9223372036854774959uLL, 9223372036854774937uLL,
      9223372036854774917uLL, 9223372036854774893uLL, 9223372036854774797uLL,
      9223372036854774739uLL, 9223372036854774713uLL, 9223372036854774679uLL,
      9223372036854774629uLL, 9223372036854774587uLL, 9223372036854774571uLL,
      9223372036854774559uLL, 9223372036854774511uLL, 9223372036854774509uLL,
      9223372036854774499uLL, 9223372036854774451uLL, 9223372036854774413uLL,
      9223372036854774341uLL, 9223372036854774319uLL, 9223372036854774307uLL,
      9223372036854774277uLL, 9223372036854774257uLL, 9223372036854774247uLL,
      9223372036854774233uLL, 9223372036854774199uLL, 9223372036854774179uLL,
      9223372036854774173uLL, 9223372036854774053uLL, 9223372036854773999uLL,
      9223372036854773977uLL, 9223372036854773953uLL, 9223372036854773899uLL,
      9223372036854773867uLL, 9223372036854773783uLL, 9223372036854773639uLL,
      9223372036854773561uLL, 9223372036854773557uLL, 9223372036854773519uLL,
      9223372036854773507uLL, 9223372036854773489uLL, 9223372036854773477uLL,
      9223372036854773443uLL, 9223372036854773429uLL, 9223372036854773407uLL,
      9223372036854773353uLL, 9223372036854773293uLL, 9223372036854773173uLL,
      9223372036854773069uLL, 9223372036854773047uLL, 9223372036854772961uLL,
      9223372036854772957uLL, 9223372036854772949uLL, 9223372036854772903uLL,
      9223372036854772847uLL, 9223372036854772801uLL, 9223372036854772733uLL,
      9223372036854772681uLL, 9223372036854772547uLL, 9223372036854772469uLL,
      9223372036854772429uLL, 9223372036854772367uLL, 9223372036854772289uLL,
      9223372036854772241uLL, 9223372036854772169uLL, 9223372036854772141uLL,
      9223372036854772061uLL, 9223372036854772051uLL, 9223372036854772039uLL,
      9223372036854771989uLL, 9223372036854771977uLL, 9223372036854771973uLL,
      9223372036854771953uLL, 9223372036854771869uLL, 9223372036854771841uLL,
      9223372036854771833uLL, 9223372036854771797uLL, 9223372036854771749uLL,
      9223372036854771737uLL, 9223372036854771727uLL, 9223372036854771703uLL,
      9223372036854771689uLL, 9223372036854771673uLL, 9223372036854771613uLL,
      9223372036854771571uLL, 9223372036854771569uLL, 9223372036854771563uLL,
      9223372036854771559uLL, 9223372036854771541uLL, 9223372036854771487uLL,
      9223372036854771457uLL, 9223372036854771451uLL, 9223372036854771239uLL,
      9223372036854771227uLL, 9223372036854771149uLL, 9223372036854771109uLL,
      9223372036854771071uLL, 9223372036854771023uLL, 9223372036854771017uLL,
      9223372036854770939uLL, 9223372036854770911uLL, 9223372036854770813uLL,
      9223372036854770749uLL, 9223372036854770723uLL, 9223372036854770591uLL,
      9223372036854770569uLL, 9223372036854770351uLL, 9223372036854770321uLL,
      9223372036854770309uLL, 9223372036854770287uLL, 9223372036854770203uLL,
      9223372036854770153uLL, 9223372036854770129uLL, 9223372036854770027uLL,
      9223372036854769939uLL, 9223372036854769921uLL, 9223372036854769823uLL,
      9223372036854769799uLL, 9223372036854769763uLL, 9223372036854769721uLL,
      9223372036854769459uLL, 9223372036854769421uLL, 9223372036854769369uLL,
      9223372036854769357uLL, 9223372036854769331uLL, 9223372036854769303uLL,
      9223372036854769289uLL, 9223372036854769249uLL, 9223372036854769243uLL,
      9223372036854769231uLL, 9223372036854769163uLL, 9223372036854769141uLL,
      9223372036854769103uLL, 9223372036854769099uLL, 9223372036854769063uLL,
      9223372036854769061uLL, 9223372036854769009uLL, 9223372036854768973uLL,
      9223372036854768967uLL, 9223372036854768841uLL, 9223372036854768823uLL,
      9223372036854768773uLL, 9223372036854768743uLL, 9223372036854768679uLL,
      9223372036854768539uLL, 9223372036854768509uLL, 9223372036854768497uLL,
      9223372036854768467uLL, 9223372036854768451uLL, 9223372036854768427uLL,
      9223372036854768347uLL, 9223372036854768337uLL, 9223372036854768269uLL,
      9223372036854768157uLL, 9223372036854768101uLL, 9223372036854768083uLL,
      9223372036854767971uLL, 9223372036854767881uLL, 9223372036854767839uLL,
      9223372036854767819uLL, 9223372036854767713uLL, 9223372036854767633uLL,
      9223372036854767609uLL, 9223372036854767509uLL, 9223372036854767483uLL,
      9223372036854767383uLL, 9223372036854767371uLL, 9223372036854767293uLL,
      9223372036854767237uLL, 9223372036854767161uLL, 9223372036854767131uLL,
      9223372036854767087uLL, 9223372036854767083uLL, 9223372036854767021uLL,
      9223372036854766969uLL, 9223372036854766963uLL, 9223372036854766943uLL,
      9223372036854766859uLL, 9223372036854766787uLL, 9223372036854766771uLL,
      9223372036854766751uLL, 9223372036854766541uLL, 9223372036854766387uLL,
      9223372036854766379uLL, 9223372036854766321uLL, 9223372036854766261uLL,
      9223372036854766243uLL, 9223372036854766199uLL, 9223372036854766169uLL,
      9223372036854766129uLL, 9223372036854766061uLL, 9223372036854766033uLL,
      9223372036854766031uLL, 9223372036854766013uLL, 9223372036854766009uLL,
      9223372036854765941uLL, 9223372036854765827uLL, 9223372036854765809uLL,
      9223372036854765793uLL, 9223372036854765773uLL, 9223372036854765767uLL,
      9223372036854765707uLL, 9223372036854765571uLL, 9223372036854765557uLL,
      9223372036854765523uLL, 9223372036854765521uLL, 9223372036854765487uLL,
      9223372036854765373uLL, 9223372036854765343uLL, 9223372036854765323uLL,
      9223372036854765319uLL, 9223372036854765299uLL, 9223372036854765173uLL,
      9223372036854765143uLL, 9223372036854765091uLL, 9223372036854765019uLL,
      9223372036854765001uLL, 9223372036854764947uLL, 9223372036854764923uLL,
      9223372036854764891uLL, 9223372036854764843uLL, 9223372036854764753uLL,
      9223372036854764693uLL, 9223372036854764687uLL, 9223372036854764639uLL,
      9223372036854764623uLL, 9223372036854764617uLL, 9223372036854764597uLL,
      9223372036854764557uLL, 9223372036854764549uLL, 9223372036854764513uLL,
      9223372036854764501uLL, 9223372036854764471uLL, 9223372036854764417uLL,
      9223372036854764401uLL, 9223372036854764317uLL, 9223372036854764287uLL,
      9223372036854764251uLL, 9223372036854764233uLL, 9223372036854764083uLL,
      9223372036854764057uLL, 9223372036854764023uLL, 9223372036854764011uLL,
      9223372036854763939uLL, 9223372036854763913uLL, 9223372036854763847uLL,
      9223372036854763813uLL, 9223372036854763807uLL, 9223372036854763717uLL,
      9223372036854763651uLL, 9223372036854763621uLL, 9223372036854763583uLL,
      9223372036854763499uLL, 9223372036854763453uLL, 9223372036854763393uLL,
      9223372036854763373uLL, 9223372036854763283uLL, 9223372036854763153uLL,
      9223372036854763127uLL, 9223372036854763057uLL, 9223372036854763027uLL,
      9223372036854763013uLL, 9223372036854762799uLL, 9223372036854762779uLL,
      9223372036854762757uLL, 9223372036854762713uLL, 9223372036854762673uLL,
      9223372036854762643uLL, 9223372036854762551uLL, 9223372036854762529uLL,
      9223372036854762481uLL, 9223372036854762467uLL, 9223372036854762463uLL,
      9223372036854762461uLL, 9223372036854762407uLL, 9223372036854762179uLL,
      9223372036854762121uLL, 9223372036854762119uLL, 9223372036854762109uLL,
      9223372036854762071uLL, 9223372036854762023uLL, 9223372036854762011uLL
    };
    return primevec;
  }

  // the 10 largest 128-bit primes
  const std::vector<std::string>& primes_128() {
    const static std::vector<std::string> prime_vec = {
      "340282366920938463463374607431768211297", "340282366920938463463374607431768211283",
      "340282366920938463463374607431768211223", "340282366920938463463374607431768211219",
      "340282366920938463463374607431768211181", "340282366920938463463374607431768211099",
      "340282366920938463463374607431768210781", "340282366920938463463374607431768210743",
      "340282366920938463463374607431768210659", "340282366920938463463374607431768210263"
    };
    return prime_vec;
  }

}
